bairros <- st_read(shapefile_path, options = "ENCODING=WINDOWS-1252")
# Filtrar para João Pessoa e simplificar geometria
bairros_joao_pessoa <- bairros %>%
filter(NM_MUNICIP == "JOÃO PESSOA")
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
# Transformar a coluna em numérica contínua
populacao$Populacao_2010 <- as.numeric(populacao$Populacao_2010)
# Unir dados populacionais aos espaciais
bairros_populacao_simplificados <- bairros_simplificados %>%
left_join(populacao, by = c("NM_BAIRRO" = "Bairros"))
# Configuração do tmap
tmap_options(max.categories = 63)
breaks_populacao <- c(500, 1000, 2000, 3000, 5000, 10000, 20000, 30000, 40000, 70000)
labels_populacao <- c("500 à 1000", "1001 à 2000", "2001 à 3000", "3001 à 5000", "5001 à 10000",
"10001 à 20000", "20001 à 30000", "30001 à 40000", "40001 à 70000")
# Criar o cartograma
tm_shape(bairros_populacao_simplificados) +
tm_polygons("Populacao_2022", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao,
labels = labels_populacao,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") +
tm_borders() +
tm_layout(title = "População por bairro de João Pessoa - CENSO 2022")
colnames(bairros_populacao_simplificados)
# Criar o cartograma
tm_shape(bairros_populacao_simplificados) +
tm_polygons("Populacao_2010", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao,
labels = labels_populacao,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") +
tm_borders() +
tm_layout(title = "População por bairro de João Pessoa - CENSO 2022")
# Criar o cartograma
tm_shape(bairros_populacao_simplificados) +
tm_polygons("Populacao_2010", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao,
labels = labels_populacao,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") +
tm_borders() +
tm_layout(title = "População por bairro de João Pessoa - CENSO 2010")
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2000/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2000/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
View(populacao_2000)
View(populacao_2000)
#renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(Bairros)) %>%
rename(Bairros = Bairros, populacao_2000 = `População Total`) %>%
select(Bairros, populacao_2000) %>%
filter(is %in% c("JOÃO_PESSOA", "FONTE:_CENSOS_DEMOGRÁFICOS."))
colnames(populacao_2000)
#renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(Bairros)) %>%
rename(Bairros = `Município e Bairro`, populacao_2000 = `Populacao`) %>%
select(Bairros, populacao_2000) %>%
filter(is %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
#renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, populacao_2000 = `Populacao`) %>%
select(Bairros, populacao_2000) %>%
filter(is %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
colnames(populacao_2000)
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
colnames(populacao_2000)
#renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, populacao_2000 = Populacao) %>%
select(Bairros, populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", "")
head(bairros_simplificados)
head("bairros_simplificados")
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
head(bairros_populacao_simplificados_2000)
colnames(bairros_populacao_simplificados_2000)
unique(populacao_2000$Bairros)
unique(bairros_simplificados$NM_BAIRRO)
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", "")
unique(populacao_2000$Bairros)
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
head(bairros_populacao_simplificados_2000)
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
#renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, populacao_2000 = Populacao) %>%
select(Bairros, populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", "")
# Carregar shapefile
zip_file <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios.zip"
# Carregar shapefile
zip_file <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios.zip"
unzip_dir <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios"
unzip(zip_file, exdir = unzip_dir)
shapefile_path <- file.path(unzip_dir, "25SEE250GC_SIR.shp")
bairros <- st_read(shapefile_path, options = "ENCODING=WINDOWS-1252")
#filtrar jp e simplificar geometria
bairros_joao_pessoa <- bairros %>%
filter(NM_MUNICIP == "JOÃO PESSOA")
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
#unir os dados
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
head(bairros_populacao_simplificados_2000)
#limpar o nome dos bairros
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", ""))
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
#unir os dados
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
head(bairros_populacao_simplificados_2000)
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
head(bairros_populacao_simplificados_2000)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Remover linhas indesejadas e limpar o nome dos bairros
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", ""))
View(populacao_2000)
View(populacao_2000)
# Carregar shapefile
zip_file <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios.zip"
unzip_dir <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios"
unzip(zip_file, exdir = unzip_dir)
shapefile_path <- file.path(unzip_dir, "25SEE250GC_SIR.shp")
bairros <- st_read(shapefile_path, options = "ENCODING=WINDOWS-1252")
# Filtrar para João Pessoa e simplificar geometria
bairros_joao_pessoa <- bairros %>%
filter(NM_MUNICIP == "JOÃO PESSOA")
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
# Transformar a coluna em numérica contínua
populacao_2000$Populacao_2000 <- as.numeric(populacao_2000$Populacao_2000)
# Unir dados populacionais aos espaciais
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
# Verificar a junção
head(bairros_populacao_simplificados_2000)
unique(populacao_2000$Bairros)
unique(bairros_simplificados$NM_BAIRRO)
# Limpar os nomes dos bairros na população
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", ""))
unique(populacao_2000$Bairros)
# Remover linhas indesejadas e limpar o nome dos bairros
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_replace(Bairros, " - JOÃO_PESSOA_\\(PB\\)", ""))
# Verificar a correção
unique(populacao_2000$Bairros)
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_remove(Bairros, "_-_JOÃO_PESSOA_\\(PB\\)"))
> unique(populacao_2000$Bairros)
unique(populacao_2000$Bairros)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores e remover parte extra
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_remove(Bairros, "_-_JOÃO_PESSOA_\\(PB\\)"))
View(populacao_2000)
View(populacao_2000)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores e remover parte extra
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_remove(Bairros, "_-_JOÃO_PESSOA_\\(PB\\)"))
# Verificar a correção
unique(populacao_2000$Bairros)
library(readxl)
library(dplyr)
library(ggplot2)
library(sf)
library(tmap)
library(stringr)
library(stringi)
library(geobr)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores e remover parte extra
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_")) %>%
mutate(Bairros = str_remove(Bairros, "_-_JOÃO_PESSOA_\\(PB\\)"))
# Verificar a correção
unique(populacao_2000$Bairros)
#carregar dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Verificação
head(populacao_2000)
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[-]", "_")) %>%
mutate(Bairros = str_replace_all(Bairros, "[ ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Remover a parte extra " - JOÃO_PESSOA_(PB)"
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_remove_all(Bairros, "_-__JOÃO_PESSOA_\\(PB\\)"))
# Verificação
unique(populacao_2000$Bairros)
#carregar dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Verificação
head(populacao_2000)
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Remover underscores adjacentes
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(Bairros, "_{2,}", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Remover a parte extra " - JOÃO_PESSOA_(PB)"
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_remove_all(Bairros, "_-_JOÃO_PESSOA_\\(PB\\)"))
# Verificação
unique(populacao_2000$Bairros)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2000/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Extrair apenas a parte relevante do nome do bairro
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_extract(Bairros, "^[^_]+"))
# Verificação
unique(populacao_2000$Bairros)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Remover a parte extra " - JOÃO_PESSOA_(PB)" sem afetar os nomes dos bairros
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_remove(Bairros, "_-__JOÃO_PESSOA_\\(PB\\)$"))
# Verificação
unique(populacao_2000$Bairros)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Substituir espaços e traços por underscores
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Dividir os nomes dos bairros e manter apenas a parte relevante
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = sapply(str_split(Bairros, "_-__JOÃO_PESSOA_\\(PB\\)"), `[`, 1))
# Verificação
unique(populacao_2000$Bairros)
# Carregar shapefile
zip_file <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios.zip"
unzip_dir <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios"
unzip(zip_file, exdir = unzip_dir)
shapefile_path <- file.path(unzip_dir, "25SEE250GC_SIR.shp")
bairros <- st_read(shapefile_path, options = "ENCODING=WINDOWS-1252")
# Filtrar para João Pessoa e simplificar geometria usando pipe
bairros_joao_pessoa <- bairros %>%
filter(NM_MUNICIP == "JOÃO PESSOA")
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
# Verificação
unique(bairros_simplificados$NM_BAIRRO)
# Transformar a coluna em numérica contínua
populacao_2000$Populacao_2000 <- as.numeric(populacao_2000$Populacao_2000)
# Verificação
str(populacao_2000)
# Unir dados populacionais aos espaciais usando pipe
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
# Verificação
head(bairros_populacao_simplificados_2000)
unique(bairros_populacao_simplificados_2000$NM_BAIRRO)
# Configuração do tmap
tmap_options(max.categories = 63)
breaks_populacao_2000 <- c(500, 1000, 2000, 3000, 5000, 10000, 20000, 30000, 40000, 70000)
labels_populacao_2000 <- c("500 à 1000", "1001 à 2000", "2001 à 3000", "3001 à 5000", "5001 à 10000",
"10001 à 20000", "20001 à 30000", "30001 à 40000", "40001 à 70000")
# Criar o cartograma
tm_shape(bairros_populacao_simplificados_2000) %>%
tm_polygons("Populacao_2000", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao_2000,
labels = labels_populacao_2000,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") %>%
tm_borders() %>%
tm_layout(title = "População por bairro de João Pessoa - Censo 2000")
# Verificação
str(populacao_2000)
# Unir dados populacionais aos espaciais usando pipe
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
# Verificação
head(bairros_populacao_simplificados_2000)
unique(bairros_populacao_simplificados_2000$NM_BAIRRO)
# Configuração do tmap
tmap_options(max.categories = 63)
breaks_populacao_2000 <- c(500, 1000, 2000, 3000, 5000, 10000, 20000, 30000, 40000, 70000)
labels_populacao_2000 <- c("500 à 1000", "1001 à 2000", "2001 à 3000", "3001 à 5000", "5001 à 10000",
"10001 à 20000", "20001 à 30000", "30001 à 40000", "40001 à 70000")
# Criar o cartograma
tm_shape(bairros_populacao_simplificados_2000) +
tm_polygons("Populacao_2000", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao_2000,
labels = labels_populacao_2000,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") +
tm_borders() +
tm_layout(title = "População por bairro de João Pessoa - CENSO 2000")
# Verificação
head(bairros_populacao_simplificados_2000)
unique(bairros_populacao_simplificados_2000$NM_BAIRRO)
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
names(populacao_2000)
#renomear e selecionar colunas de interesse
populacao_2000 <- populacao_2000 %>%
rename(Bairros = `Município e Bairro`, populacao_2000 = `Populacao`) %>%
select(Bairros, populacao_2000)
#transformar a coluna Populacao_2000 em numérica contínua
populacao_2000$populacao_2000 <- as.numeric(populacao_2000$populacao_2000)
populacao_2000 <- populacao_2000 %>%
filter(Bairros != "Fonte: IBGE - Censo Demográfico")
head(populacao_2000)
# Padronizar nomes dos bairros nos dados de 2000
# Remover a parte " - João Pessoa (PB)" dos nomes dos bairros na tabela de 2000
populacao_2000 <- populacao_2000 %>%
filter(Bairros != "Fonte: IBGE - Censo Demográfico") %>%  # Excluir a linha com a fonte
mutate(Bairros = str_replace_all(Bairros, " - João Pessoa \\(PB\\)", "")) %>%  # Remover a parte do nome
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))  # Padronizar
head(populacao_2000)
# Carregar banco de dados
file_path_2000 <- "C:/Users/Uriel Holanda/Documents/txt/UFPB Estatística/CENSO 2010/Tabela 1522.xlsx"
populacao_2000 <- read_excel(file_path_2000, skip = 1)
# Renomear e filtrar usando pipe
populacao_2000 <- populacao_2000 %>%
filter(!is.na(`Município e Bairro`)) %>%
rename(Bairros = `Município e Bairro`, Populacao_2000 = Populacao) %>%
select(Bairros, Populacao_2000) %>%
filter(!Bairros %in% c("João Pessoa (PB)", "Fonte: IBGE - Censo Demográfico"))
# Remover a parte " - João Pessoa (PB)"
populacao_2000 <- populacao_2000 %>%
mutate(Bairros = str_replace_all(Bairros, " - João Pessoa \\(PB\\)", "")) %>%
mutate(Bairros = str_replace_all(str_to_upper(Bairros), "[- ]", "_"))
# Verificação
unique(populacao_2000$Bairros)
# Carregar shapefile e filtrar para João Pessoa
zip_file <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios.zip"
unzip_dir <- "C:/Users/Uriel Holanda/Downloads/pb_setores_censitarios"
unzip(zip_file, exdir = unzip_dir)
shapefile_path <- file.path(unzip_dir, "25SEE250GC_SIR.shp")
bairros <- st_read(shapefile_path, options = "ENCODING=WINDOWS-1252")
# Filtrar para João Pessoa e simplificar geometria
bairros_joao_pessoa <- bairros %>%
filter(NM_MUNICIP == "JOÃO PESSOA")
bairros_simplificados <- bairros_joao_pessoa %>%
group_by(NM_BAIRRO) %>%
summarize(geometry = st_union(st_make_valid(geometry))) %>%
ungroup() %>%
mutate(NM_BAIRRO = str_replace_all(str_to_upper(NM_BAIRRO), "[- ]", "_"))
# Unir dados populacionais aos espaciais
bairros_populacao_simplificados_2000 <- bairros_simplificados %>%
left_join(populacao_2000, by = c("NM_BAIRRO" = "Bairros"))
# Verificação final
head(bairros_populacao_simplificados_2000)
unique(bairros_populacao_simplificados_2000$NM_BAIRRO)
# Configuração do tmap
tmap_options(max.categories = 63)
breaks_populacao_2000 <- c(500, 1000, 2000, 3000, 5000, 10000, 20000, 30000, 40000, 70000)
labels_populacao_2000 <- c("500 à 1000", "1001 à 2000", "2001 à 3000", "3001 à 5000", "5001 à 10000",
"10001 à 20000", "20001 à 30000", "30001 à 40000", "40001 à 70000")
# Criar o cartograma
tm_shape(bairros_populacao_simplificados_2000) +
tm_polygons("Populacao_2000", title = "População por Bairro",
style = "fixed",
breaks = breaks_populacao_2000,
labels = labels_populacao_2000,
palette = "Blues",
legend.format = list(digits = 0),
textNA = "Faltante") +
tm_borders() +
tm_layout(title = "População por bairro de João Pessoa - CENSO 2000")
